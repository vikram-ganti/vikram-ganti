# -*- encoding: iso-8859-1 -*-


from pyspark.sql.functions import lit
from pyspark.sql import SparkSession
from pyspark.sql.types import *
import argparse
from datetime import date
import sys

from functools import reduce
from pyspark.sql import DataFrame


time_string = date.today().strftime('%Y%m%d%H%M')
job_name = sys.argv[3] + time_string

spark = SparkSession.builder.master("yarn").appName(job_name).config("spark.sql.crossJoin.enabled", "true").config("hive.exec.dynamic.partition", "true").config("hive.exec.dynamic.partition.mode", "nonstrict").enableHiveSupport().getOrCreate()

df=spark.sql("SELECT BUKRS, GJAHR, BELNR, MAX(LOAD_DATE) AS MDATE FROM " + sys.argv[1] + ".BKPF_STG GROUP BY BUKRS, GJAHR, BELNR")
df.registerTempTable("FILTER_DATA")

df1=spark.sql("SELECT  SOURCE.BUKRS, SOURCE.LIFNR, SOURCE.UMSKS, SOURCE.UMSKZ, SOURCE.AUGDT, SOURCE.AUGBL, SOURCE.ZUONR, SOURCE.GJAHR, SOURCE.BELNR, SOURCE.BUZEI, SOURCE.BUDAT, SOURCE.BLDAT, SOURCE.CPUDT, SOURCE.WAERS, SOURCE.XBLNR, SOURCE.BLART, SOURCE.MONAT, SOURCE.BSCHL, SOURCE.ZUMSK, SOURCE.SHKZG, SOURCE.MWSKZ, SOURCE.DMBTR, SOURCE.WRBTR, SOURCE.MWSTS, SOURCE.WMWST, SOURCE.BDIFF, SOURCE.BDIF2, SOURCE.SGTXT, SOURCE.AUFNR, SOURCE.ANLN1, SOURCE.ANLN2, SOURCE.EBELN, SOURCE.EBELP, SOURCE.SAKNR, SOURCE.HKONT, SOURCE.FILKD, SOURCE.ZFBDT, SOURCE.ZTERM, SOURCE.ZBD1T, SOURCE.ZBD2T, SOURCE.ZBD3T, SOURCE.ZBD1P, SOURCE.ZBD2P, SOURCE.SKFBT, SOURCE.SKNTO, SOURCE.WSKTO, SOURCE.ZLSCH, SOURCE.ZLSPR, SOURCE.ZBFIX, SOURCE.HBKID, SOURCE.BVTYP, SOURCE.REBZG, SOURCE.REBZJ, SOURCE.REBZZ, SOURCE.SAMNR, SOURCE.ZOLLT, SOURCE.ZOLLD, SOURCE.LZBKZ, SOURCE.LANDL, SOURCE.XZAHL, SOURCE.DMBT1, SOURCE.WRBT1, SOURCE.MWSK2, SOURCE.DMBT2, SOURCE.WRBT2, SOURCE.MWSK3, SOURCE.DMBT3, SOURCE.WRBT3, SOURCE.QSSKZ, SOURCE.QSSHB, SOURCE.QBSHB, SOURCE.BSTAT, SOURCE.VBUND, SOURCE.REBZT, SOURCE.DMBE2, SOURCE.DMB21, SOURCE.DMB22, SOURCE.DMB23, SOURCE.MWST2, SOURCE.SKNT2, SOURCE.XRAGL, SOURCE.RSTGR, SOURCE.UZAWE, SOURCE.KOSTL, SOURCE.XREF1, SOURCE.XREF2, SOURCE.PSWSL, SOURCE.PSWBT, SOURCE.XNEGP, SOURCE.PRCTR, SOURCE.XREF3, SOURCE.KIDNO, SOURCE.PYAMT, SOURCE.BUPLA, SOURCE.PENRC, SOURCE.VERTT, SOURCE.VERTN, SOURCE.FKBER, SOURCE.PPRCT, SOURCE.BUZID, SOURCE.AUGGJ, SOURCE.BTYPE, SOURCE.load_date FROM " + sys.argv[1] + ".BSIK_STG SOURCE INNER JOIN FILTER_DATA FILDAT ON SOURCE.BUKRS=FILDAT.BUKRS AND SOURCE.GJAHR=FILDAT.GJAHR AND SOURCE.BELNR=FILDAT.BELNR AND SOURCE.load_date=FILDAT.MDATE")
df1.registerTempTable("SOURCE_DATA_I")
df1.printSchema()


df2=spark.sql("SELECT  SOURCE.BUKRS, SOURCE.LIFNR, SOURCE.UMSKS, SOURCE.UMSKZ, SOURCE.AUGDT, SOURCE.AUGBL, SOURCE.ZUONR, SOURCE.GJAHR, SOURCE.BELNR, SOURCE.BUZEI, SOURCE.BUDAT, SOURCE.BLDAT, SOURCE.CPUDT, SOURCE.WAERS, SOURCE.XBLNR, SOURCE.BLART, SOURCE.MONAT, SOURCE.BSCHL, SOURCE.ZUMSK, SOURCE.SHKZG, SOURCE.MWSKZ, SOURCE.DMBTR, SOURCE.WRBTR, SOURCE.MWSTS, SOURCE.WMWST, SOURCE.BDIFF, SOURCE.BDIF2, SOURCE.SGTXT, SOURCE.AUFNR, SOURCE.ANLN1, SOURCE.ANLN2, SOURCE.EBELN, SOURCE.EBELP, SOURCE.SAKNR, SOURCE.HKONT, SOURCE.FILKD, SOURCE.ZFBDT, SOURCE.ZTERM, SOURCE.ZBD1T, SOURCE.ZBD2T, SOURCE.ZBD3T, SOURCE.ZBD1P, SOURCE.ZBD2P, SOURCE.SKFBT, SOURCE.SKNTO, SOURCE.WSKTO, SOURCE.ZLSCH, SOURCE.ZLSPR, SOURCE.ZBFIX, SOURCE.HBKID, SOURCE.BVTYP, SOURCE.REBZG, SOURCE.REBZJ, SOURCE.REBZZ, SOURCE.SAMNR, SOURCE.ZOLLT, SOURCE.ZOLLD, SOURCE.LZBKZ, SOURCE.LANDL, SOURCE.XZAHL, SOURCE.DMBT1, SOURCE.WRBT1, SOURCE.MWSK2, SOURCE.DMBT2, SOURCE.WRBT2, SOURCE.MWSK3, SOURCE.DMBT3, SOURCE.WRBT3, SOURCE.QSSKZ, SOURCE.QSSHB, SOURCE.QBSHB, SOURCE.BSTAT, SOURCE.VBUND, SOURCE.REBZT, SOURCE.DMBE2, SOURCE.DMB21, SOURCE.DMB22, SOURCE.DMB23, SOURCE.MWST2, SOURCE.SKNT2, SOURCE.XRAGL, SOURCE.RSTGR, SOURCE.UZAWE, SOURCE.KOSTL, SOURCE.XREF1, SOURCE.XREF2, SOURCE.PSWSL, SOURCE.PSWBT, SOURCE.XNEGP, SOURCE.PRCTR, SOURCE.XREF3, SOURCE.KIDNO, SOURCE.PYAMT, SOURCE.BUPLA, SOURCE.PENRC, SOURCE.VERTT, SOURCE.VERTN, SOURCE.FKBER, SOURCE.PPRCT, SOURCE.BUZID, SOURCE.AUGGJ, SOURCE.BTYPE, SOURCE.load_date FROM " + sys.argv[1] + ".BSAK_STG SOURCE INNER JOIN FILTER_DATA FILDAT ON SOURCE.BUKRS=FILDAT.BUKRS AND SOURCE.GJAHR=FILDAT.GJAHR AND SOURCE.BELNR=FILDAT.BELNR AND SOURCE.load_date=FILDAT.MDATE")
df2.registerTempTable("SOURCE_DATA_A")
df2.printSchema()

dfs = [df1, df2]
df3 = reduce(DataFrame.unionAll, dfs)
df3.registerTempTable("BASE_DATA")

df4=spark.sql("SELECT BUKRS AS CO_CODE, LIFNR AS VNDR_NBR ,   vndr_nm   AS VNDR_NM ,UMSKS AS SPCL_GL_TRNS_TYP ,UMSKZ AS SPCL_GL_IND ,AUGDT AS CLRNG_DT ,AUGBL AS CLRNG_DOC ,ZUONR AS ASGMT_NBR ,GJAHR AS FISC_YR ,BELNR AS ACCTG_DOC_NBR ,BUZEI AS ACCTG_DOC_LINE_NBR ,BUDAT AS POSTNG_DT ,BLDAT AS DOC_DT ,CPUDT AS ENTR_DT ,WAERS AS CURR ,XBLNR AS REF_DOC_NBR ,BLART AS DOC_TYP ,MONAT AS FISC_PD ,BSCHL AS POSTNG_KEY ,ZUMSK AS TGT_SPL_GL_IND ,SHKZG AS DR_CR_IND ,MWSKZ AS SALES_TX_CODE ,DMBTR AS AMT_LCL_CURR ,WRBTR AS AMT_DOC_CURR ,MWSTS AS TX_AMT_LCL_CURR ,WMWST AS TX_AMT_DOC_CURR ,BDIFF AS VAL_DIFF ,BDIF2 AS VAL_DIFF_SCND_LCL_CURR ,SGTXT AS ITM_TXT ,AUFNR AS ORDR_NBR ,ANLN1 AS ASSET_NBR ,ANLN2 AS ASSET_SUB_NBR ,EBELN AS PUR_DOC_NBR ,EBELP AS PUR_DOC_ITM ,SAKNR AS GL_ACCT_NBR_RECON_MSTR_DATA ,HKONT AS GL_ACCT_NBR_RECON_POSTNG ,FILKD AS BRANCH_ACCT_NBR ,ZFBDT AS BASELINE_DT ,ZTERM AS PYMT_TRM ,ZBD1T AS CSH_DISC_DYS_1 ,ZBD2T AS CSH_DISC_DYS_2 ,ZBD3T AS NET_PYMT_TRM_PD ,ZBD1P AS CSH_DISC_PCT_1 ,ZBD2P AS CSH_DISC_PCT_2 ,SKFBT AS CSH_DISC_ELIG_AMT_DOC_CURR ,SKNTO AS CSH_DISC_AMT_LCL_CURR ,WSKTO AS CSH_DISC_AMT_DOC_CURR ,ZLSCH AS PYMT_METH ,ZLSPR AS PYMT_BLOK ,ZBFIX AS FIXD_PYMT_TRM ,HBKID AS HSE_BNK_SHRT_KEY ,BVTYP AS PARTNR_BNK_TYP ,REBZG AS REF_INVC_NBR ,REBZJ AS CR_MEMO_FISC_YR ,REBZZ AS LINE_ITM_RLVNT_INVC ,SAMNR AS INVC_LST_NBR ,ZOLLT AS CSTM_NBR ,ZOLLD AS CSTM_DT ,LZBKZ AS ST_BNK_FLG ,LANDL AS SPLY_CTRY ,XZAHL AS IND_POSTNG_KEY_PYMT_TRNS ,DMBT1 AS AMT_LCL_CURR_TX_DISTBN_1 ,WRBT1 AS AMT_FGN_CURR_TX_BRK_DN_1 ,MWSK2 AS DISTBN_TX_CODE_2 ,DMBT2 AS AMT_LCL_CURR_TX_DISTBN_2 ,WRBT2 AS AMT_FGN_CURR_TX_BRK_DN_2 ,MWSK3 AS DISTBN_TX_CODE_3 ,DMBT3 AS AMT_LCL_CURR_TX_DISTBN_3 ,WRBT3 AS AMT_FGN_CURR_TX_BRK_DN_3 ,QSSKZ AS WHLD_TX_CODE ,QSSHB AS WHLD_TX_BASE_AMT ,QBSHB AS WHLD_TX_DOC_CURR_AMT ,BSTAT AS DOC_STATUS ,VBUND AS TRADE_PARTNR_CO_ID ,REBZT AS FOLLW_ON_DOC_TYP , DMBE2 AS AMT_SCND_LCL_CURR ,DMB21 AS AMT_SCND_LCL_CURR_TX_BRK_DN_1 ,DMB22 AS AMT_SCND_LCL_CURR_TX_BRK_DN_2 ,DMB23 AS AMT_SCND_LCL_CURR_TX_BRK_DN_3 ,MWST2 AS TX_AMT_SCND_LCL_CURR ,SKNT2 AS CSH_DISC_AMT_SCND_LCL_CURR ,XRAGL AS IND_CLRNG_REVRSD ,RSTGR AS RSN_CODE_PYMT ,UZAWE AS PYMT_METH_SPLMNT ,KOSTL AS COST_CTR ,XREF1 AS BUS_PARTNR_REF_KEY_1 ,XREF2 AS BUS_PARTNR_REF_KEY_2 ,PSWSL AS UPDT_CURR ,PSWBT AS AMT_UPDT_GL ,XNEGP AS IND_NEG_POSTNG ,PRCTR AS PRFT_CTR ,XREF3 AS LINE_NBR_REF_KEY_3 ,KIDNO AS PYMT_REF ,PYAMT AS AMT_PYMT_CURR ,BUPLA AS BUS_PLCE ,PENRC AS LATE_PYMT_RSN ,VERTT AS CNTR_TYP ,VERTN AS CNTR_NBR ,FKBER AS FCN_AREA ,PPRCT AS PARTNR_PRFT_CTR ,BUZID AS LINE_ITM_ID ,AUGGJ AS CLRNG_FISC_YR ,BTYPE AS PYRL_TYP , vndr_nm2 , vndr_nm3 , vndr_nm4 , grp_key , acct_grp , acct_grp_desc , del_flg , str , city , distr , rgn , pstl_code , ctry , po_box , po_box_pstl_code , scac , cntrl_pstng_blok , cntrl_pur_blok , pymt_blok AS mstr_pymt_blok , cntrl_del_blok , phn_nbr , fax_nbr , tx_code1 , tx_code2 , tx_juris_code,     FCAL.fisc_dt AS MSTR_fisc_dt , FCAL.fisc_yr AS MSTR_fisc_yr , FCAL.fisc_qtr AS MSTR_fisc_qtr , FCAL.fisc_pd AS MSTR_fisc_pd , FCAL.fisc_wk AS MSTR_fisc_wk , FCAL.fisc_dy AS MSTR_fisc_dy , FCAL.fisc_wk_of_pd AS MSTR_fisc_wk_of_pd , FCAL.fisc_dy_of_pd AS MSTR_fisc_dy_of_pd , FCAL.fisc_dy_of_wk AS MSTR_fisc_dy_of_wk , FCAL.fisc_wk_strt_dt AS MSTR_fisc_wk_strt_dt , FCAL.fisc_wk_end_dt AS MSTR_fisc_wk_end_dt , FCAL.fisc_yr_qtr AS MSTR_fisc_yr_qtr , FCAL.fisc_yr_pd AS MSTR_fisc_yr_pd , FCAL.fisc_yr_wk AS MSTR_fisc_yr_wk , FCAL.fisc_yr_dy AS MSTR_fisc_yr_dy     FROM  BASE_DATA  LEFT OUTER JOIN " + sys.argv[1] + ".uvw_VNDR AS VMASTER ON BASE_DATA.LIFNR = VMASTER.vndr_nbr LEFT OUTER JOIN " + sys.argv[1] + ".UVW_FISC_CAL_DY AS FCAL on BASE_DATA.BUDAT = REGEXP_REPLACE(FCAL.fisc_dt, '[^0-9]+', '.')")


df4.write.insertInto(sys.argv[1] + "." + sys.argv[2] , overwrite=True)

