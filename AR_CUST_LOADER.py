# -*- encoding: iso-8859-1 -*-


from pyspark.sql.functions import lit
from pyspark.sql import SparkSession
from pyspark.sql.types import *
import argparse
from datetime import date
import sys

from functools import reduce
from pyspark.sql import DataFrame


time_string = date.today().strftime('%Y%m%d%H%M')
job_name = sys.argv[3] + time_string

spark = SparkSession.builder.master("yarn").appName(job_name).config("spark.sql.crossJoin.enabled", "true").config("hive.exec.dynamic.partition", "true").config("hive.exec.dynamic.partition.mode", "nonstrict").enableHiveSupport().getOrCreate()

df=spark.sql("SELECT BUKRS, GJAHR, BELNR, MAX(LOAD_DATE) AS MDATE FROM " + sys.argv[1] + ".BKPF_STG GROUP BY BUKRS, GJAHR, BELNR")
df.registerTempTable("FILTER_DATA")

df1=spark.sql("SELECT  SOURCE.BUKRS, SOURCE.KUNNR, SOURCE.UMSKS, SOURCE.UMSKZ, SOURCE.AUGDT, SOURCE.AUGBL, SOURCE.ZUONR, SOURCE.GJAHR, SOURCE.BELNR, SOURCE.BUZEI, SOURCE.BUDAT, SOURCE.BLDAT, SOURCE.CPUDT, SOURCE.WAERS, SOURCE.XBLNR, SOURCE.BLART, SOURCE.MONAT, SOURCE.BSCHL, SOURCE.SHKZG, SOURCE.MWSKZ, SOURCE.DMBTR, SOURCE.WRBTR, SOURCE.MWSTS, SOURCE.WMWST, SOURCE.BDIFF, SOURCE.BDIF2, SOURCE.SGTXT, SOURCE.SAKNR, SOURCE.HKONT, SOURCE.FILKD, SOURCE.ZFBDT, SOURCE.ZTERM, SOURCE.ZBD1T, SOURCE.ZBD2T, SOURCE.ZBD3T, SOURCE.ZBD1P, SOURCE.ZBD2P, SOURCE.SKFBT, SOURCE.SKNTO, SOURCE.WSKTO, SOURCE.REBZG, SOURCE.REBZJ, SOURCE.REBZZ, SOURCE.XZAHL, SOURCE.DMBT1, SOURCE.WRBT1, SOURCE.MWSK2, SOURCE.DMBT2, SOURCE.WRBT2, SOURCE.MWSK3, SOURCE.DMBT3, SOURCE.WRBT3, SOURCE.VBUND, SOURCE.VBELN, SOURCE.REBZT, SOURCE.RSTGR, SOURCE.DMBE2, SOURCE.DMB21, SOURCE.DMB22, SOURCE.DMB23, SOURCE.UZAWE, SOURCE.MWST2, SOURCE.SKNT2, SOURCE.XREF1, SOURCE.XREF2, SOURCE.PSWSL, SOURCE.PSWBT, SOURCE.KKBER, SOURCE.PRCTR, SOURCE.KIDNO, SOURCE.PYAMT, SOURCE.BUPLA, SOURCE.PPRCT, SOURCE.BUZID, SOURCE.AUGGJ, SOURCE.BTYPE, SOURCE.load_date FROM " + sys.argv[1] + ".BSID_STG SOURCE INNER JOIN FILTER_DATA FILDAT ON SOURCE.BUKRS=FILDAT.BUKRS AND SOURCE.GJAHR=FILDAT.GJAHR AND SOURCE.BELNR=FILDAT.BELNR AND SOURCE.load_date=FILDAT.MDATE")
df1.registerTempTable("SOURCE_DATA_I")
df1.printSchema()


df2=spark.sql("SELECT  SOURCE.BUKRS, SOURCE.KUNNR, SOURCE.UMSKS, SOURCE.UMSKZ, SOURCE.AUGDT, SOURCE.AUGBL, SOURCE.ZUONR, SOURCE.GJAHR, SOURCE.BELNR, SOURCE.BUZEI, SOURCE.BUDAT, SOURCE.BLDAT, SOURCE.CPUDT, SOURCE.WAERS, SOURCE.XBLNR, SOURCE.BLART, SOURCE.MONAT, SOURCE.BSCHL, SOURCE.SHKZG, SOURCE.MWSKZ, SOURCE.DMBTR, SOURCE.WRBTR, SOURCE.MWSTS, SOURCE.WMWST, SOURCE.BDIFF, SOURCE.BDIF2, SOURCE.SGTXT, SOURCE.SAKNR, SOURCE.HKONT, SOURCE.FILKD, SOURCE.ZFBDT, SOURCE.ZTERM, SOURCE.ZBD1T, SOURCE.ZBD2T, SOURCE.ZBD3T, SOURCE.ZBD1P, SOURCE.ZBD2P, SOURCE.SKFBT, SOURCE.SKNTO, SOURCE.WSKTO, SOURCE.REBZG, SOURCE.REBZJ, SOURCE.REBZZ, SOURCE.XZAHL, SOURCE.DMBT1, SOURCE.WRBT1, SOURCE.MWSK2, SOURCE.DMBT2, SOURCE.WRBT2, SOURCE.MWSK3, SOURCE.DMBT3, SOURCE.WRBT3, SOURCE.VBUND, SOURCE.VBELN, SOURCE.REBZT, SOURCE.RSTGR, SOURCE.DMBE2, SOURCE.DMB21, SOURCE.DMB22, SOURCE.DMB23, SOURCE.UZAWE, SOURCE.MWST2, SOURCE.SKNT2, SOURCE.XREF1, SOURCE.XREF2, SOURCE.PSWSL, SOURCE.PSWBT, SOURCE.KKBER, SOURCE.PRCTR, SOURCE.KIDNO, SOURCE.PYAMT, SOURCE.BUPLA, SOURCE.PPRCT, SOURCE.BUZID, SOURCE.AUGGJ, SOURCE.BTYPE, SOURCE.load_date FROM " + sys.argv[1] + ".BSAD_STG SOURCE INNER JOIN FILTER_DATA FILDAT ON SOURCE.BUKRS=FILDAT.BUKRS AND SOURCE.GJAHR=FILDAT.GJAHR AND SOURCE.BELNR=FILDAT.BELNR AND SOURCE.load_date=FILDAT.MDATE")
df2.registerTempTable("SOURCE_DATA_A")
df2.printSchema()

dfs = [df1, df2]
df3 = reduce(DataFrame.unionAll, dfs)
df3.registerTempTable("BASE_DATA")

df4=spark.sql("SELECT BUKRS AS CO_CODE , KUNNR AS CUST , cust_nm AS CUST_NM , altn_payr_nbr AS ALTN_PAYR , UMSKS AS SPCL_GL_TRNS_TYP , UMSKZ AS SPCL_GL_IND , AUGDT AS CLRNG_DT , AUGBL AS CLRNG_DOC , ZUONR AS ASGMT_NBR , GJAHR AS FY , BELNR AS ACCTG_DOC_NBR , BUZEI AS ACCTG_DOC_ITM , BUDAT AS POSTNG_DT , BLDAT AS DOC_DT , CPUDT AS ENTR_DT , WAERS AS CURR_KEY , XBLNR AS REF_DOC_NBR , BLART AS DOC_TYP , MONAT AS FISC_PD , BSCHL AS POSTNG_KEY , SHKZG AS DR_CR_IND , MWSKZ AS SALES_TX_CODE , DMBTR AS AMT_LCL_CURR , WRBTR AS AMT_DOC_CURR , MWSTS AS TX_AMT_LCL_CURR , WMWST AS TX_AMT_DOC_CURR , BDIFF AS VAL_DIFF , BDIF2 AS VAL_DIFF_SCND_LCL_CURR , SGTXT AS ITM_TXT , SAKNR AS GL_ACCT_NBR_RECON_MSTR_DATA , HKONT AS GL_ACCT_NBR_RECON_POSTNG , FILKD AS BRANCH_ACCT_NBR , ZFBDT AS BASELINE_DT , ZTERM AS PYMT_TRM , ZBD1T AS CSH_DISC_DYS_1 , ZBD2T AS CSH_DISC_DYS_2 , ZBD3T AS NET_PYMT_TRM_PD , ZBD1P AS CSH_DISC_PCT_1 , ZBD2P AS CSH_DISC_PCT_2 , SKFBT AS CSH_DISC_ELIG_AMT_DOC_CURR , SKNTO AS CSH_DISC_AMT_LCL_CURR , WSKTO AS CSH_DISC_AMT_DOC_CURR , REBZG AS REF_INVC_NBR , REBZJ AS CR_MEMO_FY , REBZZ AS LINE_ITM_RLVNT_INVC , XZAHL AS IND_POSTNG_KEY_PYMT_TRNS , DMBT1 AS AMT_LCL_CURR_TX_DISTBN_1 , WRBT1 AS AMT_FGN_CURR_TX_BRK_DN_1 , MWSK2 AS DISTBN_TX_CODE_2 , DMBT2 AS AMT_LCL_CURR_TX_DISTBN_2 , WRBT2 AS AMT_FGN_CURR_TX_BRK_DN_2 , MWSK3 AS DISTBN_TX_CODE_3 , DMBT3 AS AMT_LCL_CURR_TX_DISTBN_3 , WRBT3 AS AMT_FGN_CURR_TX_BRK_DN_3 , VBUND AS TRADE_PARTNR_CO_ID , VBELN AS BILL_DOC , REBZT AS FOLLW_ON_DOC_TYP , RSTGR AS RSN_CODE_PYMT , DMBE2 AS AMT_SCND_LCL_CURR , DMB21 AS AMT_SCND_LCL_CURR_TX_BRK_DN_1 , DMB22 AS AMT_SCND_LCL_CURR_TX_BRK_DN_2 , DMB23 AS AMT_SCND_LCL_CURR_TX_BRK_DN_3 , UZAWE AS PYMT_METH_SPLMNT , MWST2 AS TX_AMT_SCND_LCL_CURR , SKNT2 AS CSH_DISC_AMT_SCND_LCL_CURR , XREF1 AS BUS_PARTNR_REF_KEY_1 , XREF2 AS BUS_PARTNR_REF_KEY_2 , PSWSL AS UPDT_CURR , PSWBT AS AMT_UPDT_GL , KKBER AS CR_CNTL_AREA , PRCTR AS PRFT_CTR , KIDNO AS PYMT_REF , PYAMT AS AMT_PYMT_CURR , BUPLA AS BUS_PLCE , PPRCT AS PARTNR_PRFT_CTR , BUZID AS LINE_ITM_ID , AUGGJ AS CLRNG_FY , BTYPE AS PYRL_TYP , cust_nm2 , str , city , rgn , dstr , ctry , pstl_code , srch_trm2 , cre_dt , acct_grp , acct_grp_desc , pymt_blok , lab_cust_grp , altn_payr_acct_ind, sales_org , dist_chnl , `div` , prc_grp , prc_lst_typ , ordr_blok , prev_acct_nbr , ctry_nm , sales_ordr_blok,   hier_tm_pd,   hier_typ,   lvl1_cust_nbr,   lvl2_cust_nbr,   lvl3_cust_nbr,   lvl4_cust_nbr,   lvl5_cust_nbr,   lvl6_cust_nbr,   lvl7_cust_nbr,   lvl8_cust_nbr,   lvl9_cust_nbr,   lvl10_cust_nbr,   lvl11_cust_nbr,   lvl12_cust_nbr,   lvl13_cust_nbr,   lvl14_cust_nbr,   lvl15_cust_nbr,   lvl16_cust_nbr,   lvl17_cust_nbr,   lvl18_cust_nbr,   lvl19_cust_nbr,   lvl20_cust_nbr,   lvl1_cust_nm,   lvl2_cust_nm,   lvl3_cust_nm,   lvl4_cust_nm,   lvl5_cust_nm,   lvl6_cust_nm,   lvl7_cust_nm,   lvl8_cust_nm,   lvl9_cust_nm,   lvl10_cust_nm,   lvl11_cust_nm,   lvl12_cust_nm,   lvl13_cust_nm,   lvl14_cust_nm,   lvl15_cust_nm,   lvl16_cust_nm,   lvl17_cust_nm,   lvl18_cust_nm,   lvl19_cust_nm,   lvl20_cust_nm,   lst_lvl_cust_nbr,   lst_lvl_nbr,   FCAL.fisc_dt AS MSTR_fisc_dt , FCAL.fisc_yr AS MSTR_fisc_yr , FCAL.fisc_qtr AS MSTR_fisc_qtr , FCAL.fisc_pd AS MSTR_fisc_pd , FCAL.fisc_wk AS MSTR_fisc_wk , FCAL.fisc_dy AS MSTR_fisc_dy , FCAL.fisc_wk_of_pd AS MSTR_fisc_wk_of_pd , FCAL.fisc_dy_of_pd AS MSTR_fisc_dy_of_pd , FCAL.fisc_dy_of_wk AS MSTR_fisc_dy_of_wk , FCAL.fisc_wk_strt_dt AS MSTR_fisc_wk_strt_dt , FCAL.fisc_wk_end_dt AS MSTR_fisc_wk_end_dt , FCAL.fisc_yr_qtr AS MSTR_fisc_yr_qtr , FCAL.fisc_yr_pd AS MSTR_fisc_yr_pd , FCAL.fisc_yr_wk AS MSTR_fisc_yr_wk , FCAL.fisc_yr_dy AS MSTR_fisc_yr_dy   FROM  BASE_DATA  LEFT OUTER JOIN " + sys.argv[1] + ".uvw_cust AS CMASTER ON BASE_DATA.KUNNR = CMASTER.cust_nbr LEFT OUTER JOIN " + sys.argv[1] + ".UVW_CUST_HIER_UNRVL AS CHIER ON CHIER.lst_lvl_cust_nbr = CMASTER.cust_nbr LEFT OUTER JOIN " + sys.argv[1] + ".UVW_FISC_CAL_DY AS FCAL on BASE_DATA.BUDAT = REGEXP_REPLACE(FCAL.fisc_dt, '[^0-9]+', '.')")


df4.write.insertInto(sys.argv[1] + "." + sys.argv[2] , overwrite=True)

